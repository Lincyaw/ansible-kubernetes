---
- name: Generate kubeadm default config
  shell: kubeadm config print init-defaults > /root/kubeadm-config.yaml

- name: Update advertiseAddress
  lineinfile:
    path: /root/kubeadm-config.yaml
    regexp: 'advertiseAddress: 1.2.3.4'
    line: '  advertiseAddress: {{ ansible_host }}'

- name: Update node name
  lineinfile:
    path: /root/kubeadm-config.yaml
    regexp: 'name: node'
    line: '  name: master1'

- name: Add podSubnet
  lineinfile:
    path: /root/kubeadm-config.yaml
    insertafter: 'serviceSubnet: 10.96.0.0/12'
    line: '  podSubnet: 10.244.0.0/16'

- name: Add KubeletConfiguration
  blockinfile:
    path: /root/kubeadm-config.yaml
    marker: ""
    block: |
      ---
      kind: KubeletConfiguration
      apiVersion: kubelet.config.k8s.io/v1beta1
      cgroupDriver: systemd
      
- name: Initialize Kubernetes master
  command: kubeadm init --config=/root/kubeadm-config.yaml
  register: kubeadm_output

- name: Wait for Kubernetes API to be available
  wait_for:
    host: "{{ ansible_host }}"
    port: 6443
    timeout: 300
    delay: 10
  when: kubeadm_output.rc == 0

- name: Create .kube directory
  file:
    path: /root/.kube
    state: directory
    mode: '0755'

- name: Copy admin.conf to .kube/config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /root/.kube/config
    remote_src: yes

    
- name: Pause for manual service check
  pause:
    prompt: "Please check if the services are running correctly. Press 'Enter' to continue after verification."


- name: Install CILIUM client
  shell:  |
    CILIUM_CLI_VERSION=$(curl -s https://raw.githubusercontent.com/cilium/cilium-cli/main/stable.txt)
    CLI_ARCH=amd64
    if [ "$(uname -m)" = "aarch64" ]; then CLI_ARCH=arm64; fi
    curl -L --fail --remote-name-all https://github.com/cilium/cilium-cli/releases/download/${CILIUM_CLI_VERSION}/cilium-linux-${CLI_ARCH}.tar.gz{,.sha256sum}
    sha256sum --check cilium-linux-${CLI_ARCH}.tar.gz.sha256sum
    tar xzvfC cilium-linux-${CLI_ARCH}.tar.gz /usr/local/bin
    rm cilium-linux-${CLI_ARCH}.tar.gz{,.sha256sum}


- name: Install cilium
  shell: cilium install --version 1.15.5 # --set kubeProxyReplacement=true  --set gatewayAPI.enabled=true --set routingMode=tunnel

- name: Check network
  shell: cilium status --wait 

- name: Check network
  shell: cilium connectivity test
 

- name: Generate token
  command: kubeadm token create
  register: token_output

- name: Generate CA certificate hash
  shell: "openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //' "
  register: ca_hash_output

# sudo kubeadm join 10.10.10.220:6443 --token abcdef.0123456789abcdef --discovery-token-ca-cert-hash sha256:09c50f602679f9d0211d8485d8b244169cd8296243d5c722bfb6a4a47c390e8b
- name: Generate join command
  set_fact:
    join_command: "kubeadm join {{ ansible_host }}:6443 --token {{ token_output.stdout }} --discovery-token-ca-cert-hash sha256:{{ ca_hash_output.stdout }}"
